/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface AsEboolTestInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "castFromEuint16ToEbool"
      | "castFromEuint32ToEbool"
      | "castFromEuint8ToEbool"
      | "castFromPlaintextToEbool"
      | "castFromPreEncryptedToEbool"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "castFromEuint16ToEbool",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "castFromEuint32ToEbool",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "castFromEuint8ToEbool",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "castFromPlaintextToEbool",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "castFromPreEncryptedToEbool",
    values: [BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "castFromEuint16ToEbool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "castFromEuint32ToEbool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "castFromEuint8ToEbool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "castFromPlaintextToEbool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "castFromPreEncryptedToEbool",
    data: BytesLike
  ): Result;
}

export interface AsEboolTest extends BaseContract {
  connect(runner?: ContractRunner | null): AsEboolTest;
  waitForDeployment(): Promise<this>;

  interface: AsEboolTestInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  castFromEuint16ToEbool: TypedContractMethod<
    [val: BigNumberish, test: string],
    [boolean],
    "view"
  >;

  castFromEuint32ToEbool: TypedContractMethod<
    [val: BigNumberish, test: string],
    [boolean],
    "view"
  >;

  castFromEuint8ToEbool: TypedContractMethod<
    [val: BigNumberish, test: string],
    [boolean],
    "view"
  >;

  castFromPlaintextToEbool: TypedContractMethod<
    [val: BigNumberish],
    [boolean],
    "view"
  >;

  castFromPreEncryptedToEbool: TypedContractMethod<
    [val: BytesLike],
    [boolean],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "castFromEuint16ToEbool"
  ): TypedContractMethod<[val: BigNumberish, test: string], [boolean], "view">;
  getFunction(
    nameOrSignature: "castFromEuint32ToEbool"
  ): TypedContractMethod<[val: BigNumberish, test: string], [boolean], "view">;
  getFunction(
    nameOrSignature: "castFromEuint8ToEbool"
  ): TypedContractMethod<[val: BigNumberish, test: string], [boolean], "view">;
  getFunction(
    nameOrSignature: "castFromPlaintextToEbool"
  ): TypedContractMethod<[val: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "castFromPreEncryptedToEbool"
  ): TypedContractMethod<[val: BytesLike], [boolean], "view">;

  filters: {};
}
