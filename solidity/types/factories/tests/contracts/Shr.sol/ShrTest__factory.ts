/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ShrTest,
  ShrTestInterface,
} from "../../../../tests/contracts/Shr.sol/ShrTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "TestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "shr",
    outputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611137806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806346b8c6cf14610030575b600080fd5b61004a60048036038101906100459190610cd2565b610060565b6040516100579190610d55565b60405180910390f35b60006100e585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601281526020017f736872286575696e74382c6575696e7438290000000000000000000000000000815250610504565b156101165761010c6101076100f98561051f565b6101028561051f565b610533565b6105c8565b60ff1690506104fc565b61019985858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f736872286575696e7431362c6575696e74313629000000000000000000000000815250610504565b156101cb576101c06101bb6101ad856106c7565b6101b6856106c7565b6106db565b610770565b61ffff1690506104fc565b61024e85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f736872286575696e7433322c6575696e74333229000000000000000000000000815250610504565b15610282576102756102706102628561086f565b61026b8561086f565b610883565b610918565b63ffffffff1690506104fc565b61030585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601281526020017f6575696e74382e736872286575696e7438290000000000000000000000000000815250610504565b1561033f576103356103306103198461051f565b6103228661051f565b610a1790919063ffffffff16565b6105c8565b60ff1690506104fc565b6103c285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f6575696e7431362e736872286575696e74313629000000000000000000000000815250610504565b156103fd576103f26103ed6103d6846106c7565b6103df866106c7565b610a2b90919063ffffffff16565b610770565b61ffff1690506104fc565b61048085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f6575696e7433322e736872286575696e74333229000000000000000000000000815250610504565b156104bd576104b06104ab6104948461086f565b61049d8661086f565b610a3f90919063ffffffff16565b610918565b63ffffffff1690506104fc565b84846040517f58197bae0000000000000000000000000000000000000000000000000000000081526004016104f3929190610dce565b60405180910390fd5b949350505050565b60008180519060200120838051906020012014905092915050565b600061052c826000610a53565b9050919050565b600061053e83610b17565b1580610550575061054e82610b17565b155b15610587576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000839050600083905060006105ba8383608073ffffffffffffffffffffffffffffffffffffffff1663f8ab927d610b24565b905080935050505092915050565b60006105d382610b17565b610609576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016106249190610e1d565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016106719190610eb7565b602060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610eee565b90506106bd81610bcf565b9350505050919050565b60006106d4826001610a53565b9050919050565b60006106e683610bd9565b15806106f857506106f682610bd9565b155b1561072f576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000839050600083905060006107628383608073ffffffffffffffffffffffffffffffffffffffff1663f8ab927d610b24565b905080935050505092915050565b600061077b82610bd9565b6107b1576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016107cc9190610e1d565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016108199190610eb7565b602060405180830381865afa158015610836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085a9190610eee565b905061086581610be6565b9350505050919050565b600061087c826002610a53565b9050919050565b600061088e83610bf0565b15806108a0575061089e82610bf0565b155b156108d7576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008390506000839050600061090a8383608073ffffffffffffffffffffffffffffffffffffffff1663f8ab927d610b24565b905080935050505092915050565b600061092382610bf0565b610959576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016109749190610e1d565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016109c19190610eb7565b602060405180830381865afa1580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190610eee565b9050610a0d81610bfd565b9350505050919050565b6000610a238383610533565b905092915050565b6000610a3783836106db565b905092915050565b6000610a4b8383610883565b905092915050565b6000808360001b8360f81b604051602001610a6f929190610f68565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b8152600401610abc9190610eb7565b600060405180830381865afa158015610ad9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b0291906110b5565b9050610b0d81610c07565b9250505092915050565b6000808214159050919050565b6000808560001b8560001b604051602001610b409291906110fe565b604051602081830303815290604052905060608484836040518263ffffffff1660e01b8152600401610b729190610eb7565b600060405180830381865afa158015610b8f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bb891906110b5565b9050610bc381610c15565b92505050949350505050565b6000819050919050565b6000808214159050919050565b6000819050919050565b6000808214159050919050565b6000819050919050565b600060208201519050919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610c5c57610c5b610c37565b5b8235905067ffffffffffffffff811115610c7957610c78610c3c565b5b602083019150836001820283011115610c9557610c94610c41565b5b9250929050565b6000819050919050565b610caf81610c9c565b8114610cba57600080fd5b50565b600081359050610ccc81610ca6565b92915050565b60008060008060608587031215610cec57610ceb610c2d565b5b600085013567ffffffffffffffff811115610d0a57610d09610c32565b5b610d1687828801610c46565b94509450506020610d2987828801610cbd565b9250506040610d3a87828801610cbd565b91505092959194509250565b610d4f81610c9c565b82525050565b6000602082019050610d6a6000830184610d46565b92915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610dad8385610d70565b9350610dba838584610d81565b610dc383610d90565b840190509392505050565b60006020820190508181036000830152610de9818486610da1565b90509392505050565b6000819050919050565b6000819050919050565b610e17610e1282610df2565b610dfc565b82525050565b6000610e298284610e06565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e72578082015181840152602081019050610e57565b60008484015250505050565b6000610e8982610e38565b610e938185610e43565b9350610ea3818560208601610e54565b610eac81610d90565b840191505092915050565b60006020820190508181036000830152610ed18184610e7e565b905092915050565b600081519050610ee881610ca6565b92915050565b600060208284031215610f0457610f03610c2d565b5b6000610f1284828501610ed9565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b610f62610f5d82610f1b565b610f47565b82525050565b6000610f748285610e06565b602082019150610f848284610f51565b6001820191508190509392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd182610d90565b810181811067ffffffffffffffff82111715610ff057610fef610f99565b5b80604052505050565b6000611003610c23565b905061100f8282610fc8565b919050565b600067ffffffffffffffff82111561102f5761102e610f99565b5b61103882610d90565b9050602081019050919050565b600061105861105384611014565b610ff9565b90508281526020810184848401111561107457611073610f94565b5b61107f848285610e54565b509392505050565b600082601f83011261109c5761109b610c37565b5b81516110ac848260208601611045565b91505092915050565b6000602082840312156110cb576110ca610c2d565b5b600082015167ffffffffffffffff8111156110e9576110e8610c32565b5b6110f584828501611087565b91505092915050565b600061110a8285610e06565b60208201915061111a8284610e06565b602082019150819050939250505056fea164736f6c6343000813000a";

type ShrTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShrTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShrTest__factory extends ContractFactory {
  constructor(...args: ShrTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ShrTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ShrTest__factory {
    return super.connect(runner) as ShrTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShrTestInterface {
    return new Interface(_abi) as ShrTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ShrTest {
    return new Contract(address, _abi, runner) as unknown as ShrTest;
  }
}
