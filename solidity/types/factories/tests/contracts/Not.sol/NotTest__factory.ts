/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NotTest,
  NotTestInterface,
} from "../../../../tests/contracts/Not.sol/NotTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "TestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "not",
    outputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506112bc806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806345ba092414610030575b600080fd5b61004a60048036038101906100459190610e6b565b610060565b6040516100579190610eda565b60405180910390f35b60006100e584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600b81526020017f6e6f74286575696e74382900000000000000000000000000000000000000000081525061037a565b1561010d576101036100fe6100f984610395565b6103a9565b6104b3565b60ff169050610373565b61019084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600c81526020017f6e6f74286575696e74313629000000000000000000000000000000000000000081525061037a565b156101b9576101ae6101a96101a4846105b2565b6105c6565b6106d0565b61ffff169050610373565b61023c84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600c81526020017f6e6f74286575696e74333229000000000000000000000000000000000000000081525061037a565b156102675761025a610255610250846107cf565b6107e3565b6108ed565b63ffffffff169050610373565b6102ea84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600a81526020017f6e6f742865626f6f6c290000000000000000000000000000000000000000000081525061037a565b15610334576000600190506000830361030257600090505b61031b610316610311836109ec565b610a0f565b610a2b565b1561032a576001915050610373565b6000915050610373565b83836040517f58197bae00000000000000000000000000000000000000000000000000000000815260040161036a929190610f53565b60405180910390fd5b9392505050565b60008180519060200120838051906020012014905092915050565b60006103a2826000610b2a565b9050919050565b60006103b482610bee565b6103ea576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016104059190610fa2565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663bf797959836040518263ffffffff1660e01b8152600401610452919061103c565b600060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610498919061117f565b905060006104a582610bfb565b905080945050505050919050565b60006104be82610bee565b6104f4576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b60405160200161050f9190610fa2565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b815260040161055c919061103c565b602060405180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d91906111dd565b90506105a881610c09565b9350505050919050565b60006105bf826001610b2a565b9050919050565b60006105d182610c13565b610607576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016106229190610fa2565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663bf797959836040518263ffffffff1660e01b815260040161066f919061103c565b600060405180830381865afa15801561068c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106b5919061117f565b905060006106c282610bfb565b905080945050505050919050565b60006106db82610c13565b610711576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b60405160200161072c9190610fa2565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b8152600401610779919061103c565b602060405180830381865afa158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba91906111dd565b90506107c581610c20565b9350505050919050565b60006107dc826002610b2a565b9050919050565b60006107ee82610c2a565b610824576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b60405160200161083f9190610fa2565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663bf797959836040518263ffffffff1660e01b815260040161088c919061103c565b600060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108d2919061117f565b905060006108df82610bfb565b905080945050505050919050565b60006108f882610c2a565b61092e576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016109499190610fa2565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b8152600401610996919061103c565b602060405180830381865afa1580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d791906111dd565b90506109e281610c37565b9350505050919050565b6000806000905082156109fe57600190505b610a0781610c41565b915050919050565b6000610a2482610a1f60016109ec565b610c55565b9050919050565b6000610a3682610cea565b610a6c576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b604051602001610a879190610fa2565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b8152600401610ad4919061103c565b602060405180830381865afa158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1591906111dd565b9050610b2081610cf7565b9350505050919050565b6000808360001b8360f81b604051602001610b46929190611257565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b8152600401610b93919061103c565b600060405180830381865afa158015610bb0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bd9919061117f565b9050610be481610bfb565b9250505092915050565b6000808214159050919050565b600060208201519050919050565b6000819050919050565b6000808214159050919050565b6000819050919050565b6000808214159050919050565b6000819050919050565b6000610c4e826000610b2a565b9050919050565b6000610c6083610cea565b1580610c725750610c7082610cea565b155b15610ca9576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060008390506000610cdc8383608073ffffffffffffffffffffffffffffffffffffffff1663dded6e15610d03565b905080935050505092915050565b6000808214159050919050565b60008082119050919050565b6000808560001b8560001b604051602001610d1f929190611283565b604051602081830303815290604052905060608484836040518263ffffffff1660e01b8152600401610d51919061103c565b600060405180830381865afa158015610d6e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d97919061117f565b9050610da281610dae565b92505050949350505050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610df557610df4610dd0565b5b8235905067ffffffffffffffff811115610e1257610e11610dd5565b5b602083019150836001820283011115610e2e57610e2d610dda565b5b9250929050565b6000819050919050565b610e4881610e35565b8114610e5357600080fd5b50565b600081359050610e6581610e3f565b92915050565b600080600060408486031215610e8457610e83610dc6565b5b600084013567ffffffffffffffff811115610ea257610ea1610dcb565b5b610eae86828701610ddf565b93509350506020610ec186828701610e56565b9150509250925092565b610ed481610e35565b82525050565b6000602082019050610eef6000830184610ecb565b92915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610f328385610ef5565b9350610f3f838584610f06565b610f4883610f15565b840190509392505050565b60006020820190508181036000830152610f6e818486610f26565b90509392505050565b6000819050919050565b6000819050919050565b610f9c610f9782610f77565b610f81565b82525050565b6000610fae8284610f8b565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ff7578082015181840152602081019050610fdc565b60008484015250505050565b600061100e82610fbd565b6110188185610fc8565b9350611028818560208601610fd9565b61103181610f15565b840191505092915050565b600060208201905081810360008301526110568184611003565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61109b82610f15565b810181811067ffffffffffffffff821117156110ba576110b9611063565b5b80604052505050565b60006110cd610dbc565b90506110d98282611092565b919050565b600067ffffffffffffffff8211156110f9576110f8611063565b5b61110282610f15565b9050602081019050919050565b600061112261111d846110de565b6110c3565b90508281526020810184848401111561113e5761113d61105e565b5b611149848285610fd9565b509392505050565b600082601f83011261116657611165610dd0565b5b815161117684826020860161110f565b91505092915050565b60006020828403121561119557611194610dc6565b5b600082015167ffffffffffffffff8111156111b3576111b2610dcb565b5b6111bf84828501611151565b91505092915050565b6000815190506111d781610e3f565b92915050565b6000602082840312156111f3576111f2610dc6565b5b6000611201848285016111c8565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61125161124c8261120a565b611236565b82525050565b60006112638285610f8b565b6020820191506112738284611240565b6001820191508190509392505050565b600061128f8285610f8b565b60208201915061129f8284610f8b565b602082019150819050939250505056fea164736f6c6343000813000a";

type NotTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NotTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NotTest__factory extends ContractFactory {
  constructor(...args: NotTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NotTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NotTest__factory {
    return super.connect(runner) as NotTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NotTestInterface {
    return new Interface(_abi) as NotTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NotTest {
    return new Contract(address, _abi, runner) as unknown as NotTest;
  }
}
