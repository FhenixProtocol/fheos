/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  AsEuint16Test,
  AsEuint16TestInterface,
} from "../../../../tests/contracts/asEuint16.sol/AsEuint16Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "TestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "castFromEboolToEuint16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "castFromEuint32ToEuint16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "castFromEuint8ToEuint16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "castFromPlaintextToEuint16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "castFromPreEncryptedToEuint16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type AsEuint16TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AsEuint16TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AsEuint16Test__factory extends ContractFactory {
  constructor(...args: AsEuint16TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AsEuint16Test & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AsEuint16Test__factory {
    return super.connect(runner) as AsEuint16Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AsEuint16TestInterface {
    return new Interface(_abi) as AsEuint16TestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AsEuint16Test {
    return new Contract(address, _abi, runner) as unknown as AsEuint16Test;
  }
}
