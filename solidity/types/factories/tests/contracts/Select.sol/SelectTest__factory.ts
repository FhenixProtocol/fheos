/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SelectTest,
  SelectTestInterface,
} from "../../../../tests/contracts/Select.sol/SelectTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "TestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "bool",
        name: "c",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "select",
    outputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611203806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ea2fb79314610030575b600080fd5b61004a60048036038101906100459190610d79565b610060565b6040516100579190610e10565b60405180910390f35b60008061006c856103ca565b90506100f187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600e81526020017f73656c6563743a206575696e74380000000000000000000000000000000000008152506103ed565b15610124576101196101148261010687610408565b61010f87610408565b61041c565b6104ad565b60ff169150506103c1565b6101a787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600f81526020017f73656c6563743a206575696e74313600000000000000000000000000000000008152506103ed565b156101db576101cf6101ca826101bc876105ac565b6101c5876105ac565b6105c0565b610651565b61ffff169150506103c1565b61025e87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600f81526020017f73656c6563743a206575696e74333200000000000000000000000000000000008152506103ed565b15610294576102866102818261027387610750565b61027c87610750565b610764565b6107f5565b63ffffffff169150506103c1565b61031787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600d81526020017f73656c6563743a2065626f6f6c000000000000000000000000000000000000008152506103ed565b15610382576000600190506000600190506000860361033557600091505b6000850361034257600090505b61036561036084610352856103ca565b61035b856103ca565b6108f4565b610985565b1561037657600193505050506103c1565b600093505050506103c1565b86866040517f58197bae0000000000000000000000000000000000000000000000000000000081526004016103b8929190610e89565b60405180910390fd5b95945050505050565b6000806000905082156103dc57600190505b6103e581610a84565b915050919050565b60008180519060200120838051906020012014905092915050565b6000610415826000610a98565b9050919050565b600061042784610b5c565b1580610439575061043783610b69565b155b8061044a575061044882610b69565b155b15610481576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084905060008490506000849050600061049d848484610b76565b9050809450505050509392505050565b60006104b882610b69565b6104ee576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016105099190610ed8565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016105569190610f72565b602060405180830381865afa158015610573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105979190610fa9565b90506105a281610c40565b9350505050919050565b60006105b9826001610a98565b9050919050565b60006105cb84610b5c565b15806105dd57506105db83610c4a565b155b806105ee57506105ec82610c4a565b155b15610625576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000849050600084905060008490506000610641848484610b76565b9050809450505050509392505050565b600061065c82610c4a565b610692576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016106ad9190610ed8565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016106fa9190610f72565b602060405180830381865afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190610fa9565b905061074681610c57565b9350505050919050565b600061075d826002610a98565b9050919050565b600061076f84610b5c565b1580610781575061077f83610c61565b155b80610792575061079082610c61565b155b156107c9576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008490506000849050600084905060006107e5848484610b76565b9050809450505050509392505050565b600061080082610c61565b610836576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016108519190610ed8565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b815260040161089e9190610f72565b602060405180830381865afa1580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df9190610fa9565b90506108ea81610c6e565b9350505050919050565b60006108ff84610b5c565b1580610911575061090f83610b5c565b155b80610922575061092082610b5c565b155b15610959576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000849050600084905060008490506000610975848484610b76565b9050809450505050509392505050565b600061099082610b5c565b6109c6576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016109e19190610ed8565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b8152600401610a2e9190610f72565b602060405180830381865afa158015610a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6f9190610fa9565b9050610a7a81610c78565b9350505050919050565b6000610a91826000610a98565b9050919050565b6000808360001b8360f81b604051602001610ab4929190611023565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b8152600401610b019190610f72565b600060405180830381865afa158015610b1e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b479190611170565b9050610b5281610c84565b9250505092915050565b6000808214159050919050565b6000808214159050919050565b6000808460001b8460001b8460001b604051602001610b97939291906111b9565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff1663713f45af836040518263ffffffff1660e01b8152600401610be49190610f72565b600060405180830381865afa158015610c01573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c2a9190611170565b9050610c3581610c84565b925050509392505050565b6000819050919050565b6000808214159050919050565b6000819050919050565b6000808214159050919050565b6000819050919050565b60008082119050919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610ccb57610cca610ca6565b5b8235905067ffffffffffffffff811115610ce857610ce7610cab565b5b602083019150836001820283011115610d0457610d03610cb0565b5b9250929050565b60008115159050919050565b610d2081610d0b565b8114610d2b57600080fd5b50565b600081359050610d3d81610d17565b92915050565b6000819050919050565b610d5681610d43565b8114610d6157600080fd5b50565b600081359050610d7381610d4d565b92915050565b600080600080600060808688031215610d9557610d94610c9c565b5b600086013567ffffffffffffffff811115610db357610db2610ca1565b5b610dbf88828901610cb5565b95509550506020610dd288828901610d2e565b9350506040610de388828901610d64565b9250506060610df488828901610d64565b9150509295509295909350565b610e0a81610d43565b82525050565b6000602082019050610e256000830184610e01565b92915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610e688385610e2b565b9350610e75838584610e3c565b610e7e83610e4b565b840190509392505050565b60006020820190508181036000830152610ea4818486610e5c565b90509392505050565b6000819050919050565b6000819050919050565b610ed2610ecd82610ead565b610eb7565b82525050565b6000610ee48284610ec1565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f2d578082015181840152602081019050610f12565b60008484015250505050565b6000610f4482610ef3565b610f4e8185610efe565b9350610f5e818560208601610f0f565b610f6781610e4b565b840191505092915050565b60006020820190508181036000830152610f8c8184610f39565b905092915050565b600081519050610fa381610d4d565b92915050565b600060208284031215610fbf57610fbe610c9c565b5b6000610fcd84828501610f94565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61101d61101882610fd6565b611002565b82525050565b600061102f8285610ec1565b60208201915061103f828461100c565b6001820191508190509392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61108c82610e4b565b810181811067ffffffffffffffff821117156110ab576110aa611054565b5b80604052505050565b60006110be610c92565b90506110ca8282611083565b919050565b600067ffffffffffffffff8211156110ea576110e9611054565b5b6110f382610e4b565b9050602081019050919050565b600061111361110e846110cf565b6110b4565b90508281526020810184848401111561112f5761112e61104f565b5b61113a848285610f0f565b509392505050565b600082601f83011261115757611156610ca6565b5b8151611167848260208601611100565b91505092915050565b60006020828403121561118657611185610c9c565b5b600082015167ffffffffffffffff8111156111a4576111a3610ca1565b5b6111b084828501611142565b91505092915050565b60006111c58286610ec1565b6020820191506111d58285610ec1565b6020820191506111e58284610ec1565b60208201915081905094935050505056fea164736f6c6343000813000a";

type SelectTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SelectTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SelectTest__factory extends ContractFactory {
  constructor(...args: SelectTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SelectTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SelectTest__factory {
    return super.connect(runner) as SelectTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SelectTestInterface {
    return new Interface(_abi) as SelectTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SelectTest {
    return new Contract(address, _abi, runner) as unknown as SelectTest;
  }
}
