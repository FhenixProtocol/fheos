/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ReqTest,
  ReqTestInterface,
} from "../../../../tests/contracts/Req.sol/ReqTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "TestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "req",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cdf806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063befdc5a314610030575b600080fd5b61004a60048036038101906100459190610926565b61004c565b005b6100cf83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600b81526020017f726571286575696e74382900000000000000000000000000000000000000000081525061031f565b156100ea576100e56100e08261033a565b61034e565b61031a565b61016d83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600c81526020017f726571286575696e74313629000000000000000000000000000000000000000081525061031f565b156101885761018361017e8261043f565b610453565b610319565b61020b83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600c81526020017f726571286575696e74333229000000000000000000000000000000000000000081525061031f565b156102265761022161021c82610544565b610558565b610318565b6102a983838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600a81526020017f7265712865626f6f6c290000000000000000000000000000000000000000000081525061031f565b156102d857600060019050600082036102c157600090505b6102d26102cd82610649565b61066c565b50610317565b82826040517f58197bae00000000000000000000000000000000000000000000000000000000815260040161030e9291906109e4565b60405180910390fd5b5b5b5b505050565b60008180519060200120838051906020012014905092915050565b600061034782600061075d565b9050919050565b61035781610821565b61038d576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081905060008160001b6040516020016103a89190610a33565b6040516020818303038152906040529050608073ffffffffffffffffffffffffffffffffffffffff1663ac6c08dd826040518263ffffffff1660e01b81526004016103f39190610acd565b600060405180830381865afa158015610410573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104399190610c10565b50505050565b600061044c82600161075d565b9050919050565b61045c8161082e565b610492576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081905060008160001b6040516020016104ad9190610a33565b6040516020818303038152906040529050608073ffffffffffffffffffffffffffffffffffffffff1663ac6c08dd826040518263ffffffff1660e01b81526004016104f89190610acd565b600060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061053e9190610c10565b50505050565b600061055182600261075d565b9050919050565b6105618161083b565b610597576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081905060008160001b6040516020016105b29190610a33565b6040516020818303038152906040529050608073ffffffffffffffffffffffffffffffffffffffff1663ac6c08dd826040518263ffffffff1660e01b81526004016105fd9190610acd565b600060405180830381865afa15801561061a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106439190610c10565b50505050565b60008060009050821561065b57600190505b61066481610848565b915050919050565b6106758161085c565b6106ab576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081905060008160001b6040516020016106c69190610a33565b6040516020818303038152906040529050608073ffffffffffffffffffffffffffffffffffffffff1663ac6c08dd826040518263ffffffff1660e01b81526004016107119190610acd565b600060405180830381865afa15801561072e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107579190610c10565b50505050565b6000808360001b8360f81b604051602001610779929190610ca6565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b81526004016107c69190610acd565b600060405180830381865afa1580156107e3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061080c9190610c10565b905061081781610869565b9250505092915050565b6000808214159050919050565b6000808214159050919050565b6000808214159050919050565b600061085582600061075d565b9050919050565b6000808214159050919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126108b0576108af61088b565b5b8235905067ffffffffffffffff8111156108cd576108cc610890565b5b6020830191508360018202830111156108e9576108e8610895565b5b9250929050565b6000819050919050565b610903816108f0565b811461090e57600080fd5b50565b600081359050610920816108fa565b92915050565b60008060006040848603121561093f5761093e610881565b5b600084013567ffffffffffffffff81111561095d5761095c610886565b5b6109698682870161089a565b9350935050602061097c86828701610911565b9150509250925092565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006109c38385610986565b93506109d0838584610997565b6109d9836109a6565b840190509392505050565b600060208201905081810360008301526109ff8184866109b7565b90509392505050565b6000819050919050565b6000819050919050565b610a2d610a2882610a08565b610a12565b82525050565b6000610a3f8284610a1c565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a88578082015181840152602081019050610a6d565b60008484015250505050565b6000610a9f82610a4e565b610aa98185610a59565b9350610ab9818560208601610a6a565b610ac2816109a6565b840191505092915050565b60006020820190508181036000830152610ae78184610a94565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b2c826109a6565b810181811067ffffffffffffffff82111715610b4b57610b4a610af4565b5b80604052505050565b6000610b5e610877565b9050610b6a8282610b23565b919050565b600067ffffffffffffffff821115610b8a57610b89610af4565b5b610b93826109a6565b9050602081019050919050565b6000610bb3610bae84610b6f565b610b54565b905082815260208101848484011115610bcf57610bce610aef565b5b610bda848285610a6a565b509392505050565b600082601f830112610bf757610bf661088b565b5b8151610c07848260208601610ba0565b91505092915050565b600060208284031215610c2657610c25610881565b5b600082015167ffffffffffffffff811115610c4457610c43610886565b5b610c5084828501610be2565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b610ca0610c9b82610c59565b610c85565b82525050565b6000610cb28285610a1c565b602082019150610cc28284610c8f565b600182019150819050939250505056fea164736f6c6343000813000a";

type ReqTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReqTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReqTest__factory extends ContractFactory {
  constructor(...args: ReqTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReqTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReqTest__factory {
    return super.connect(runner) as ReqTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReqTestInterface {
    return new Interface(_abi) as ReqTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ReqTest {
    return new Contract(address, _abi, runner) as unknown as ReqTest;
  }
}
