/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NeTest,
  NeTestInterface,
} from "../../../../tests/contracts/Ne.sol/NeTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "TestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "ne",
    outputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611239806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635995a9bf14610030575b600080fd5b61004a60048036038101906100459190610dd4565b610060565b6040516100579190610e57565b60405180910390f35b60006100e585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601181526020017f6e65286575696e74382c6575696e743829000000000000000000000000000000815250610729565b156101235761010c6101076100f985610744565b61010285610744565b610758565b6107ed565b1561011a5760019050610721565b60009050610721565b6101a685858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601381526020017f6e65286575696e7431362c6575696e7431362900000000000000000000000000815250610729565b156101e4576101cd6101c86101ba856108ec565b6101c3856108ec565b610900565b6107ed565b156101db5760019050610721565b60009050610721565b61026785858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601381526020017f6e65286575696e7433322c6575696e7433322900000000000000000000000000815250610729565b156102a55761028e61028961027b85610995565b61028485610995565b6109a9565b6107ed565b1561029c5760019050610721565b60009050610721565b61032885858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601181526020017f6575696e74382e6e65286575696e743829000000000000000000000000000000815250610729565b1561036f5761035861035361033c84610744565b61034586610744565b610a3e90919063ffffffff16565b6107ed565b156103665760019050610721565b60009050610721565b6103f285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601381526020017f6575696e7431362e6e65286575696e7431362900000000000000000000000000815250610729565b156104395761042261041d610406846108ec565b61040f866108ec565b610a5290919063ffffffff16565b6107ed565b156104305760019050610721565b60009050610721565b6104bc85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601381526020017f6575696e7433322e6e65286575696e7433322900000000000000000000000000815250610729565b15610503576104ec6104e76104d084610995565b6104d986610995565b610a6690919063ffffffff16565b6107ed565b156104fa5760019050610721565b60009050610721565b61058685858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600f81526020017f6e652865626f6f6c2c65626f6f6c290000000000000000000000000000000000815250610729565b156105ee57600060019050600060019050600085036105a457600091505b600084036105b157600090505b6105d36105ce6105c084610a7a565b6105c984610a7a565b610a9d565b6107ed565b156105e357600192505050610721565b600092505050610721565b61067185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600f81526020017f65626f6f6c2e6e652865626f6f6c290000000000000000000000000000000000815250610729565b156106e2576000600190506000600190506000850361068f57600091505b6000840361069c57600090505b6106c76106c26106ab83610a7a565b6106b485610a7a565b610b3290919063ffffffff16565b6107ed565b156106d757600192505050610721565b600092505050610721565b84846040517f58197bae000000000000000000000000000000000000000000000000000000008152600401610718929190610ed0565b60405180910390fd5b949350505050565b60008180519060200120838051906020012014905092915050565b6000610751826000610b46565b9050919050565b600061076383610c0a565b1580610775575061077382610c0a565b155b156107ac576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000839050600083905060006107df8383608073ffffffffffffffffffffffffffffffffffffffff1663d903ba51610c17565b905080935050505092915050565b60006107f882610cc2565b61082e576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016108499190610f1f565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016108969190610fb9565b602060405180830381865afa1580156108b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d79190610ff0565b90506108e281610ccf565b9350505050919050565b60006108f9826001610b46565b9050919050565b600061090b83610cdb565b158061091d575061091b82610cdb565b155b15610954576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000839050600083905060006109878383608073ffffffffffffffffffffffffffffffffffffffff1663d903ba51610c17565b905080935050505092915050565b60006109a2826002610b46565b9050919050565b60006109b483610ce8565b15806109c657506109c482610ce8565b155b156109fd576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060008390506000610a308383608073ffffffffffffffffffffffffffffffffffffffff1663d903ba51610c17565b905080935050505092915050565b6000610a4a8383610758565b905092915050565b6000610a5e8383610900565b905092915050565b6000610a7283836109a9565b905092915050565b600080600090508215610a8c57600190505b610a9581610cf5565b915050919050565b6000610aa883610cc2565b1580610aba5750610ab882610cc2565b155b15610af1576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060008390506000610b248383608073ffffffffffffffffffffffffffffffffffffffff1663d903ba51610c17565b905080935050505092915050565b6000610b3e8383610a9d565b905092915050565b6000808360001b8360f81b604051602001610b6292919061106a565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b8152600401610baf9190610fb9565b600060405180830381865afa158015610bcc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610bf591906111b7565b9050610c0081610d09565b9250505092915050565b6000808214159050919050565b6000808560001b8560001b604051602001610c33929190611200565b604051602081830303815290604052905060608484836040518263ffffffff1660e01b8152600401610c659190610fb9565b600060405180830381865afa158015610c82573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cab91906111b7565b9050610cb681610d17565b92505050949350505050565b6000808214159050919050565b60008082119050919050565b6000808214159050919050565b6000808214159050919050565b6000610d02826000610b46565b9050919050565b600060208201519050919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610d5e57610d5d610d39565b5b8235905067ffffffffffffffff811115610d7b57610d7a610d3e565b5b602083019150836001820283011115610d9757610d96610d43565b5b9250929050565b6000819050919050565b610db181610d9e565b8114610dbc57600080fd5b50565b600081359050610dce81610da8565b92915050565b60008060008060608587031215610dee57610ded610d2f565b5b600085013567ffffffffffffffff811115610e0c57610e0b610d34565b5b610e1887828801610d48565b94509450506020610e2b87828801610dbf565b9250506040610e3c87828801610dbf565b91505092959194509250565b610e5181610d9e565b82525050565b6000602082019050610e6c6000830184610e48565b92915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610eaf8385610e72565b9350610ebc838584610e83565b610ec583610e92565b840190509392505050565b60006020820190508181036000830152610eeb818486610ea3565b90509392505050565b6000819050919050565b6000819050919050565b610f19610f1482610ef4565b610efe565b82525050565b6000610f2b8284610f08565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f74578082015181840152602081019050610f59565b60008484015250505050565b6000610f8b82610f3a565b610f958185610f45565b9350610fa5818560208601610f56565b610fae81610e92565b840191505092915050565b60006020820190508181036000830152610fd38184610f80565b905092915050565b600081519050610fea81610da8565b92915050565b60006020828403121561100657611005610d2f565b5b600061101484828501610fdb565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61106461105f8261101d565b611049565b82525050565b60006110768285610f08565b6020820191506110868284611053565b6001820191508190509392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110d382610e92565b810181811067ffffffffffffffff821117156110f2576110f161109b565b5b80604052505050565b6000611105610d25565b905061111182826110ca565b919050565b600067ffffffffffffffff8211156111315761113061109b565b5b61113a82610e92565b9050602081019050919050565b600061115a61115584611116565b6110fb565b90508281526020810184848401111561117657611175611096565b5b611181848285610f56565b509392505050565b600082601f83011261119e5761119d610d39565b5b81516111ae848260208601611147565b91505092915050565b6000602082840312156111cd576111cc610d2f565b5b600082015167ffffffffffffffff8111156111eb576111ea610d34565b5b6111f784828501611189565b91505092915050565b600061120c8285610f08565b60208201915061121c8284610f08565b602082019150819050939250505056fea164736f6c6343000813000a";

type NeTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NeTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NeTest__factory extends ContractFactory {
  constructor(...args: NeTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NeTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NeTest__factory {
    return super.connect(runner) as NeTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NeTestInterface {
    return new Interface(_abi) as NeTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NeTest {
    return new Contract(address, _abi, runner) as unknown as NeTest;
  }
}
