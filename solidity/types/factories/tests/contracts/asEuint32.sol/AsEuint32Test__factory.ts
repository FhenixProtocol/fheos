/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  AsEuint32Test,
  AsEuint32TestInterface,
} from "../../../../tests/contracts/asEuint32.sol/AsEuint32Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "TestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "castFromEboolToEuint32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "castFromEuint16ToEuint32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "castFromEuint8ToEuint32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "castFromPlaintextToEuint32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "castFromPreEncryptedToEuint32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506110e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063d4b2623111610050578063d4b26231146100cc578063d5176d91146100fc578063daaafad11461012c57610067565b806344a7808e1461006c578063c378e1a71461009c575b600080fd5b61008660048036038101906100819190610b65565b61015c565b6040516100939190610be4565b60405180910390f35b6100b660048036038101906100b19190610b65565b6102f4565b6040516100c39190610be4565b60405180910390f35b6100e660048036038101906100e19190610d40565b61048c565b6040516100f39190610be4565b60405180910390f35b61011660048036038101906101119190610b65565b6104a6565b6040516101239190610be4565b60405180910390f35b61014660048036038101906101419190610d89565b61063e565b6040516101539190610be4565b60405180910390f35b60006101e183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600581526020017f626f756e64000000000000000000000000000000000000000000000000000000815250610658565b15610206576101ff6101fa6101f586610673565b610687565b610699565b90506102ed565b61028983838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600781526020017f726567756c617200000000000000000000000000000000000000000000000000815250610658565b156102ae576102a76102a261029d86610673565b610798565b610699565b90506102ed565b82826040517f58197bae0000000000000000000000000000000000000000000000000000000081526004016102e4929190610df4565b60405180910390fd5b9392505050565b600061037983838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600581526020017f626f756e64000000000000000000000000000000000000000000000000000000815250610658565b1561039e5761039761039261038d866107ac565b6107c0565b610699565b9050610485565b61042183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600781526020017f726567756c617200000000000000000000000000000000000000000000000000815250610658565b156104465761043f61043a610435866107ac565b6107d2565b610699565b9050610485565b82826040517f58197bae00000000000000000000000000000000000000000000000000000000815260040161047c929190610df4565b60405180910390fd5b9392505050565b600061049f61049a836107e6565b610699565b9050919050565b600061052b83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600581526020017f626f756e64000000000000000000000000000000000000000000000000000000815250610658565b156105505761054961054461053f866107fa565b61080e565b610699565b9050610637565b6105d383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600781526020017f726567756c617200000000000000000000000000000000000000000000000000815250610658565b156105f8576105f16105ec6105e7866107fa565b610820565b610699565b9050610637565b82826040517f58197bae00000000000000000000000000000000000000000000000000000000815260040161062e929190610df4565b60405180910390fd5b9392505050565b600061065161064c83610834565b610699565b9050919050565b60008180519060200120838051906020012014905092915050565b6000610680826000610848565b9050919050565b600061069282610798565b9050919050565b60006106a48261090c565b6106da576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016106f59190610e43565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016107429190610edd565b602060405180830381865afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190610f14565b905061078e81610919565b9350505050919050565b60006107a5826002610923565b9050919050565b60006107b9826001610848565b9050919050565b60006107cb826107d2565b9050919050565b60006107df826002610923565b9050919050565b60006107f38260026109e7565b9050919050565b6000610807826000610848565b9050919050565b600061081982610820565b9050919050565b600061082d826002610923565b9050919050565b6000610841826002610848565b9050919050565b6000808360001b8360f81b604051602001610864929190610f8e565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b81526004016108b19190610edd565b600060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108f7919061102a565b905061090281610aa8565b9250505092915050565b6000808214159050919050565b6000819050919050565b6000808360001b8360f81b60405160200161093f929190610f8e565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff1663756a210d836040518263ffffffff1660e01b815260040161098c9190610edd565b600060405180830381865afa1580156109a9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109d2919061102a565b90506109dd81610aa8565b9250505092915050565b600080838360f81b604051602001610a009291906110af565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638e760afe836040518263ffffffff1660e01b8152600401610a4d9190610edd565b600060405180830381865afa158015610a6a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610a93919061102a565b9050610a9e81610aa8565b9250505092915050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610add81610aca565b8114610ae857600080fd5b50565b600081359050610afa81610ad4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610b2557610b24610b00565b5b8235905067ffffffffffffffff811115610b4257610b41610b05565b5b602083019150836001820283011115610b5e57610b5d610b0a565b5b9250929050565b600080600060408486031215610b7e57610b7d610ac0565b5b6000610b8c86828701610aeb565b935050602084013567ffffffffffffffff811115610bad57610bac610ac5565b5b610bb986828701610b0f565b92509250509250925092565b600063ffffffff82169050919050565b610bde81610bc5565b82525050565b6000602082019050610bf96000830184610bd5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c4d82610c04565b810181811067ffffffffffffffff82111715610c6c57610c6b610c15565b5b80604052505050565b6000610c7f610ab6565b9050610c8b8282610c44565b919050565b600067ffffffffffffffff821115610cab57610caa610c15565b5b610cb482610c04565b9050602081019050919050565b82818337600083830152505050565b6000610ce3610cde84610c90565b610c75565b905082815260208101848484011115610cff57610cfe610bff565b5b610d0a848285610cc1565b509392505050565b600082601f830112610d2757610d26610b00565b5b8135610d37848260208601610cd0565b91505092915050565b600060208284031215610d5657610d55610ac0565b5b600082013567ffffffffffffffff811115610d7457610d73610ac5565b5b610d8084828501610d12565b91505092915050565b600060208284031215610d9f57610d9e610ac0565b5b6000610dad84828501610aeb565b91505092915050565b600082825260208201905092915050565b6000610dd38385610db6565b9350610de0838584610cc1565b610de983610c04565b840190509392505050565b60006020820190508181036000830152610e0f818486610dc7565b90509392505050565b6000819050919050565b6000819050919050565b610e3d610e3882610e18565b610e22565b82525050565b6000610e4f8284610e2c565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e98578082015181840152602081019050610e7d565b60008484015250505050565b6000610eaf82610e5e565b610eb98185610e69565b9350610ec9818560208601610e7a565b610ed281610c04565b840191505092915050565b60006020820190508181036000830152610ef78184610ea4565b905092915050565b600081519050610f0e81610ad4565b92915050565b600060208284031215610f2a57610f29610ac0565b5b6000610f3884828501610eff565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b610f88610f8382610f41565b610f6d565b82525050565b6000610f9a8285610e2c565b602082019150610faa8284610f77565b6001820191508190509392505050565b6000610fcd610fc884610c90565b610c75565b905082815260208101848484011115610fe957610fe8610bff565b5b610ff4848285610e7a565b509392505050565b600082601f83011261101157611010610b00565b5b8151611021848260208601610fba565b91505092915050565b6000602082840312156110405761103f610ac0565b5b600082015167ffffffffffffffff81111561105e5761105d610ac5565b5b61106a84828501610ffc565b91505092915050565b600081905092915050565b600061108982610e5e565b6110938185611073565b93506110a3818560208601610e7a565b80840191505092915050565b60006110bb828561107e565b91506110c78284610f77565b600182019150819050939250505056fea164736f6c6343000813000a";

type AsEuint32TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AsEuint32TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AsEuint32Test__factory extends ContractFactory {
  constructor(...args: AsEuint32TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AsEuint32Test & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AsEuint32Test__factory {
    return super.connect(runner) as AsEuint32Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AsEuint32TestInterface {
    return new Interface(_abi) as AsEuint32TestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AsEuint32Test {
    return new Contract(address, _abi, runner) as unknown as AsEuint32Test;
  }
}
