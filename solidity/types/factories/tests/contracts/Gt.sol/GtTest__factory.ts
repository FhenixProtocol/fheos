/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../common";
import type {
  GtTest,
  GtTestInterface,
} from "../../../../tests/contracts/Gt.sol/GtTest";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eca806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806395a3ad9514610030575b600080fd5b61004a600480360381019061004591906108c7565b610060565b604051610057919061094a565b60405180910390f35b60006100e585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601181526020017f6774286575696e74382c6575696e743829000000000000000000000000000000815250610314565b156101235761010c6101076100f98561032f565b6101028561032f565b610343565b6103e1565b1561011a576001905061030c565b6000905061030c565b6101a685858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601381526020017f6774286575696e7431362c6575696e7431362900000000000000000000000000815250610314565b156101e4576101cd6101c86101ba856104e9565b6101c3856104e9565b6104fd565b6103e1565b156101db576001905061030c565b6000905061030c565b61026785858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601381526020017f6774286575696e7433322c6575696e7433322900000000000000000000000000815250610314565b156102a55761028e61028961027b8561059b565b6102848561059b565b6105af565b6103e1565b1561029c576001905061030c565b6000905061030c565b600085856040516020016102ba929190610a3c565b6040516020818303038152906040529061030a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103019190610afb565b60405180910390fd5b505b949350505050565b60008180519060200120838051906020012014905092915050565b600061033c82600061064d565b9050919050565b600061034e83610711565b1580610360575061035e82610711565b155b156103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039790610b8f565b60405180910390fd5b6000839050600083905060006103d38383608073ffffffffffffffffffffffffffffffffffffffff16633b90218861071e565b905080935050505092915050565b60006103ec826107c9565b61042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042290610b8f565b60405180910390fd5b600082905060008160001b6040516020016104469190610bda565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016104939190610c4a565b602060405180830381865afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190610c81565b90506104df816107d6565b9350505050919050565b60006104f682600161064d565b9050919050565b6000610508836107e2565b158061051a5750610518826107e2565b155b1561055a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055190610b8f565b60405180910390fd5b60008390506000839050600061058d8383608073ffffffffffffffffffffffffffffffffffffffff16633b90218861071e565b905080935050505092915050565b60006105a882600261064d565b9050919050565b60006105ba836107ef565b15806105cc57506105ca826107ef565b155b1561060c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060390610b8f565b60405180910390fd5b60008390506000839050600061063f8383608073ffffffffffffffffffffffffffffffffffffffff16633b90218861071e565b905080935050505092915050565b6000808360001b8360f81b604051602001610669929190610cfb565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b81526004016106b69190610c4a565b600060405180830381865afa1580156106d3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106fc9190610e48565b9050610707816107fc565b9250505092915050565b6000808214159050919050565b6000808560001b8560001b60405160200161073a929190610e91565b604051602081830303815290604052905060608484836040518263ffffffff1660e01b815260040161076c9190610c4a565b600060405180830381865afa158015610789573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107b29190610e48565b90506107bd8161080a565b92505050949350505050565b6000808214159050919050565b60008082119050919050565b6000808214159050919050565b6000808214159050919050565b600060208201519050919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126108515761085061082c565b5b8235905067ffffffffffffffff81111561086e5761086d610831565b5b60208301915083600182028301111561088a57610889610836565b5b9250929050565b6000819050919050565b6108a481610891565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b600080600080606085870312156108e1576108e0610822565b5b600085013567ffffffffffffffff8111156108ff576108fe610827565b5b61090b8782880161083b565b9450945050602061091e878288016108b2565b925050604061092f878288016108b2565b91505092959194509250565b61094481610891565b82525050565b600060208201905061095f600083018461093b565b92915050565b600081905092915050565b7f7465737420270000000000000000000000000000000000000000000000000000600082015250565b60006109a6600683610965565b91506109b182610970565b600682019050919050565b82818337600083830152505050565b60006109d78385610965565b93506109e48385846109bc565b82840190509392505050565b7f27206e6f7420666f756e64000000000000000000000000000000000000000000600082015250565b6000610a26600b83610965565b9150610a31826109f0565b600b82019050919050565b6000610a4782610999565b9150610a548284866109cb565b9150610a5f82610a19565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aa5578082015181840152602081019050610a8a565b60008484015250505050565b6000601f19601f8301169050919050565b6000610acd82610a6b565b610ad78185610a76565b9350610ae7818560208601610a87565b610af081610ab1565b840191505092915050565b60006020820190508181036000830152610b158184610ac2565b905092915050565b7f4f6e65206f72206d6f726520696e7075747320617265206e6f7420696e69746960008201527f616c697a65642e00000000000000000000000000000000000000000000000000602082015250565b6000610b79602783610a76565b9150610b8482610b1d565b604082019050919050565b60006020820190508181036000830152610ba881610b6c565b9050919050565b6000819050919050565b6000819050919050565b610bd4610bcf82610baf565b610bb9565b82525050565b6000610be68284610bc3565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b6000610c1c82610bf5565b610c268185610c00565b9350610c36818560208601610a87565b610c3f81610ab1565b840191505092915050565b60006020820190508181036000830152610c648184610c11565b905092915050565b600081519050610c7b8161089b565b92915050565b600060208284031215610c9757610c96610822565b5b6000610ca584828501610c6c565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b610cf5610cf082610cae565b610cda565b82525050565b6000610d078285610bc3565b602082019150610d178284610ce4565b6001820191508190509392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d6482610ab1565b810181811067ffffffffffffffff82111715610d8357610d82610d2c565b5b80604052505050565b6000610d96610818565b9050610da28282610d5b565b919050565b600067ffffffffffffffff821115610dc257610dc1610d2c565b5b610dcb82610ab1565b9050602081019050919050565b6000610deb610de684610da7565b610d8c565b905082815260208101848484011115610e0757610e06610d27565b5b610e12848285610a87565b509392505050565b600082601f830112610e2f57610e2e61082c565b5b8151610e3f848260208601610dd8565b91505092915050565b600060208284031215610e5e57610e5d610822565b5b600082015167ffffffffffffffff811115610e7c57610e7b610827565b5b610e8884828501610e1a565b91505092915050565b6000610e9d8285610bc3565b602082019150610ead8284610bc3565b602082019150819050939250505056fea164736f6c6343000813000a";

type GtTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GtTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GtTest__factory extends ContractFactory {
  constructor(...args: GtTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GtTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GtTest__factory {
    return super.connect(runner) as GtTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GtTestInterface {
    return new Interface(_abi) as GtTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GtTest {
    return new Contract(address, _abi, runner) as unknown as GtTest;
  }
}
