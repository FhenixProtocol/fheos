/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../common";
import type {
  RemTest,
  RemTestInterface,
} from "../../../../tests/contracts/Rem.sol/RemTest";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "rem",
    outputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506110bc806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063375b57aa14610030575b600080fd5b61004a60048036038101906100459190610ab9565b610060565b6040516100579190610b3c565b60405180910390f35b60006100e585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601281526020017f72656d286575696e74382c6575696e74382900000000000000000000000000008152506102f1565b156101165761010c6101076100f98561030c565b6101028561030c565b610320565b6103be565b60ff1690506102e9565b61019985858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f72656d286575696e7431362c6575696e743136290000000000000000000000008152506102f1565b156101cb576101c06101bb6101ad856104c6565b6101b6856104c6565b6104da565b610578565b61ffff1690506102e9565b61024e85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f72656d286575696e7433322c6575696e743332290000000000000000000000008152506102f1565b156102825761027561027061026285610680565b61026b85610680565b610694565b610732565b63ffffffff1690506102e9565b60008585604051602001610297929190610c2e565b604051602081830303815290604052906102e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102de9190610ced565b60405180910390fd5b505b949350505050565b60008180519060200120838051906020012014905092915050565b600061031982600061083a565b9050919050565b600061032b836108fe565b158061033d575061033b826108fe565b155b1561037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490610d81565b60405180910390fd5b6000839050600083905060006103b08383608073ffffffffffffffffffffffffffffffffffffffff1663ae07ec6b61090b565b905080935050505092915050565b60006103c9826108fe565b610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610d81565b60405180910390fd5b600082905060008160001b6040516020016104239190610dcc565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016104709190610e3c565b602060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b19190610e73565b90506104bc816109b6565b9350505050919050565b60006104d382600161083a565b9050919050565b60006104e5836109c0565b15806104f757506104f5826109c0565b155b15610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e90610d81565b60405180910390fd5b60008390506000839050600061056a8383608073ffffffffffffffffffffffffffffffffffffffff1663ae07ec6b61090b565b905080935050505092915050565b6000610583826109c0565b6105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990610d81565b60405180910390fd5b600082905060008160001b6040516020016105dd9190610dcc565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b815260040161062a9190610e3c565b602060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190610e73565b9050610676816109cd565b9350505050919050565b600061068d82600261083a565b9050919050565b600061069f836109d7565b15806106b157506106af826109d7565b155b156106f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e890610d81565b60405180910390fd5b6000839050600083905060006107248383608073ffffffffffffffffffffffffffffffffffffffff1663ae07ec6b61090b565b905080935050505092915050565b600061073d826109d7565b61077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077390610d81565b60405180910390fd5b600082905060008160001b6040516020016107979190610dcc565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016107e49190610e3c565b602060405180830381865afa158015610801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108259190610e73565b9050610830816109e4565b9350505050919050565b6000808360001b8360f81b604051602001610856929190610eed565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b81526004016108a39190610e3c565b600060405180830381865afa1580156108c0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108e9919061103a565b90506108f4816109ee565b9250505092915050565b6000808214159050919050565b6000808560001b8560001b604051602001610927929190611083565b604051602081830303815290604052905060608484836040518263ffffffff1660e01b81526004016109599190610e3c565b600060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061099f919061103a565b90506109aa816109fc565b92505050949350505050565b6000819050919050565b6000808214159050919050565b6000819050919050565b6000808214159050919050565b6000819050919050565b600060208201519050919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610a4357610a42610a1e565b5b8235905067ffffffffffffffff811115610a6057610a5f610a23565b5b602083019150836001820283011115610a7c57610a7b610a28565b5b9250929050565b6000819050919050565b610a9681610a83565b8114610aa157600080fd5b50565b600081359050610ab381610a8d565b92915050565b60008060008060608587031215610ad357610ad2610a14565b5b600085013567ffffffffffffffff811115610af157610af0610a19565b5b610afd87828801610a2d565b94509450506020610b1087828801610aa4565b9250506040610b2187828801610aa4565b91505092959194509250565b610b3681610a83565b82525050565b6000602082019050610b516000830184610b2d565b92915050565b600081905092915050565b7f7465737420270000000000000000000000000000000000000000000000000000600082015250565b6000610b98600683610b57565b9150610ba382610b62565b600682019050919050565b82818337600083830152505050565b6000610bc98385610b57565b9350610bd6838584610bae565b82840190509392505050565b7f27206e6f7420666f756e64000000000000000000000000000000000000000000600082015250565b6000610c18600b83610b57565b9150610c2382610be2565b600b82019050919050565b6000610c3982610b8b565b9150610c46828486610bbd565b9150610c5182610c0b565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c97578082015181840152602081019050610c7c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cbf82610c5d565b610cc98185610c68565b9350610cd9818560208601610c79565b610ce281610ca3565b840191505092915050565b60006020820190508181036000830152610d078184610cb4565b905092915050565b7f4f6e65206f72206d6f726520696e7075747320617265206e6f7420696e69746960008201527f616c697a65642e00000000000000000000000000000000000000000000000000602082015250565b6000610d6b602783610c68565b9150610d7682610d0f565b604082019050919050565b60006020820190508181036000830152610d9a81610d5e565b9050919050565b6000819050919050565b6000819050919050565b610dc6610dc182610da1565b610dab565b82525050565b6000610dd88284610db5565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b6000610e0e82610de7565b610e188185610df2565b9350610e28818560208601610c79565b610e3181610ca3565b840191505092915050565b60006020820190508181036000830152610e568184610e03565b905092915050565b600081519050610e6d81610a8d565b92915050565b600060208284031215610e8957610e88610a14565b5b6000610e9784828501610e5e565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b610ee7610ee282610ea0565b610ecc565b82525050565b6000610ef98285610db5565b602082019150610f098284610ed6565b6001820191508190509392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f5682610ca3565b810181811067ffffffffffffffff82111715610f7557610f74610f1e565b5b80604052505050565b6000610f88610a0a565b9050610f948282610f4d565b919050565b600067ffffffffffffffff821115610fb457610fb3610f1e565b5b610fbd82610ca3565b9050602081019050919050565b6000610fdd610fd884610f99565b610f7e565b905082815260208101848484011115610ff957610ff8610f19565b5b611004848285610c79565b509392505050565b600082601f83011261102157611020610a1e565b5b8151611031848260208601610fca565b91505092915050565b6000602082840312156110505761104f610a14565b5b600082015167ffffffffffffffff81111561106e5761106d610a19565b5b61107a8482850161100c565b91505092915050565b600061108f8285610db5565b60208201915061109f8284610db5565b602082019150819050939250505056fea164736f6c6343000813000a";

type RemTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RemTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RemTest__factory extends ContractFactory {
  constructor(...args: RemTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RemTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RemTest__factory {
    return super.connect(runner) as RemTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RemTestInterface {
    return new Interface(_abi) as RemTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RemTest {
    return new Contract(address, _abi, runner) as unknown as RemTest;
  }
}
