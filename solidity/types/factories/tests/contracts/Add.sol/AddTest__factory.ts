/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  AddTest,
  AddTestInterface,
} from "../../../../tests/contracts/Add.sol/AddTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
    ],
    name: "TestNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "UninitializedInputs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "output",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611393806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c8616da514610030575b600080fd5b61004a60048036038101906100459190610f2e565b610060565b6040516100579190610fb1565b60405180910390f35b60006100e585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601281526020017f616464286575696e74382c6575696e7438290000000000000000000000000000815250610724565b156101165761010c6101076100f98561073f565b6101028561073f565b610753565b6107e8565b60ff16905061071c565b61019985858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f616464286575696e7431362c6575696e74313629000000000000000000000000815250610724565b156101cb576101c06101bb6101ad856108e7565b6101b6856108e7565b6108fb565b610990565b61ffff16905061071c565b61024e85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f616464286575696e7433322c6575696e74333229000000000000000000000000815250610724565b156102825761027561027061026285610a8f565b61026b85610a8f565b610aa3565b610b38565b63ffffffff16905061071c565b61030585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601281526020017f6575696e74382e616464286575696e7438290000000000000000000000000000815250610724565b1561033f576103356103306103198461073f565b6103228661073f565b610c3790919063ffffffff16565b6107e8565b60ff16905061071c565b6103c285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f6575696e7431362e616464286575696e74313629000000000000000000000000815250610724565b156103fd576103f26103ed6103d6846108e7565b6103df866108e7565b610c4b90919063ffffffff16565b610990565b61ffff16905061071c565b61048085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601481526020017f6575696e7433322e616464286575696e74333229000000000000000000000000815250610724565b156104bd576104b06104ab61049484610a8f565b61049d86610a8f565b610c5f90919063ffffffff16565b610b38565b63ffffffff16905061071c565b61054085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280600f81526020017f6575696e7438202b206575696e74380000000000000000000000000000000000815250610724565b15610571576105676105626105548561073f565b61055d8561073f565b610c73565b6107e8565b60ff16905061071c565b6105f485858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601181526020017f6575696e743136202b206575696e743136000000000000000000000000000000815250610724565b156106265761061b610616610608856108e7565b610611856108e7565b610c87565b610990565b61ffff16905061071c565b6106a985858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506040518060400160405280601181526020017f6575696e743332202b206575696e743332000000000000000000000000000000815250610724565b156106dd576106d06106cb6106bd85610a8f565b6106c685610a8f565b610c9b565b610b38565b63ffffffff16905061071c565b84846040517f58197bae00000000000000000000000000000000000000000000000000000000815260040161071392919061102a565b60405180910390fd5b949350505050565b60008180519060200120838051906020012014905092915050565b600061074c826000610caf565b9050919050565b600061075e83610d73565b1580610770575061076e82610d73565b155b156107a7576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000839050600083905060006107da8383608073ffffffffffffffffffffffffffffffffffffffff1663ba658111610d80565b905080935050505092915050565b60006107f382610d73565b610829576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016108449190611079565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b81526004016108919190611113565b602060405180830381865afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d2919061114a565b90506108dd81610e2b565b9350505050919050565b60006108f4826001610caf565b9050919050565b600061090683610e35565b1580610918575061091682610e35565b155b1561094f576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000839050600083905060006109828383608073ffffffffffffffffffffffffffffffffffffffff1663ba658111610d80565b905080935050505092915050565b600061099b82610e35565b6109d1576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b6040516020016109ec9190611079565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b8152600401610a399190611113565b602060405180830381865afa158015610a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7a919061114a565b9050610a8581610e42565b9350505050919050565b6000610a9c826002610caf565b9050919050565b6000610aae83610e4c565b1580610ac05750610abe82610e4c565b155b15610af7576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060008390506000610b2a8383608073ffffffffffffffffffffffffffffffffffffffff1663ba658111610d80565b905080935050505092915050565b6000610b4382610e4c565b610b79576040517fe48a86db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082905060008160001b604051602001610b949190611079565b60405160208183030381529060405290506000608073ffffffffffffffffffffffffffffffffffffffff1663210ca7be836040518263ffffffff1660e01b8152600401610be19190611113565b602060405180830381865afa158015610bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c22919061114a565b9050610c2d81610e59565b9350505050919050565b6000610c438383610753565b905092915050565b6000610c5783836108fb565b905092915050565b6000610c6b8383610aa3565b905092915050565b6000610c7f8383610753565b905092915050565b6000610c9383836108fb565b905092915050565b6000610ca78383610aa3565b905092915050565b6000808360001b8360f81b604051602001610ccb9291906111c4565b60405160208183030381529060405290506060608073ffffffffffffffffffffffffffffffffffffffff16638a52c8c7836040518263ffffffff1660e01b8152600401610d189190611113565b600060405180830381865afa158015610d35573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d5e9190611311565b9050610d6981610e63565b9250505092915050565b6000808214159050919050565b6000808560001b8560001b604051602001610d9c92919061135a565b604051602081830303815290604052905060608484836040518263ffffffff1660e01b8152600401610dce9190611113565b600060405180830381865afa158015610deb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e149190611311565b9050610e1f81610e71565b92505050949350505050565b6000819050919050565b6000808214159050919050565b6000819050919050565b6000808214159050919050565b6000819050919050565b600060208201519050919050565b600060208201519050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610eb857610eb7610e93565b5b8235905067ffffffffffffffff811115610ed557610ed4610e98565b5b602083019150836001820283011115610ef157610ef0610e9d565b5b9250929050565b6000819050919050565b610f0b81610ef8565b8114610f1657600080fd5b50565b600081359050610f2881610f02565b92915050565b60008060008060608587031215610f4857610f47610e89565b5b600085013567ffffffffffffffff811115610f6657610f65610e8e565b5b610f7287828801610ea2565b94509450506020610f8587828801610f19565b9250506040610f9687828801610f19565b91505092959194509250565b610fab81610ef8565b82525050565b6000602082019050610fc66000830184610fa2565b92915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006110098385610fcc565b9350611016838584610fdd565b61101f83610fec565b840190509392505050565b60006020820190508181036000830152611045818486610ffd565b90509392505050565b6000819050919050565b6000819050919050565b61107361106e8261104e565b611058565b82525050565b60006110858284611062565b60208201915081905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110ce5780820151818401526020810190506110b3565b60008484015250505050565b60006110e582611094565b6110ef818561109f565b93506110ff8185602086016110b0565b61110881610fec565b840191505092915050565b6000602082019050818103600083015261112d81846110da565b905092915050565b60008151905061114481610f02565b92915050565b6000602082840312156111605761115f610e89565b5b600061116e84828501611135565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6111be6111b982611177565b6111a3565b82525050565b60006111d08285611062565b6020820191506111e082846111ad565b6001820191508190509392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61122d82610fec565b810181811067ffffffffffffffff8211171561124c5761124b6111f5565b5b80604052505050565b600061125f610e7f565b905061126b8282611224565b919050565b600067ffffffffffffffff82111561128b5761128a6111f5565b5b61129482610fec565b9050602081019050919050565b60006112b46112af84611270565b611255565b9050828152602081018484840111156112d0576112cf6111f0565b5b6112db8482856110b0565b509392505050565b600082601f8301126112f8576112f7610e93565b5b81516113088482602086016112a1565b91505092915050565b60006020828403121561132757611326610e89565b5b600082015167ffffffffffffffff81111561134557611344610e8e565b5b611351848285016112e3565b91505092915050565b60006113668285611062565b6020820191506113768284611062565b602082019150819050939250505056fea164736f6c6343000813000a";

type AddTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddTest__factory extends ContractFactory {
  constructor(...args: AddTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AddTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AddTest__factory {
    return super.connect(runner) as AddTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddTestInterface {
    return new Interface(_abi) as AddTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AddTest {
    return new Contract(address, _abi, runner) as unknown as AddTest;
  }
}
