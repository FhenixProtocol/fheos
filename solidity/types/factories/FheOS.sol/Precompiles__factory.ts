/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Precompiles,
  PrecompilesInterface,
} from "../../FheOS.sol/Precompiles";

const _abi = [
  {
    inputs: [],
    name: "FhePubKey",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Fheos",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610128610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806313d8d46414610045578063d9c55b1714610063575b600080fd5b61004d610081565b60405161005a91906100cc565b60405180910390f35b61006b610086565b6040516100789190610100565b60405180910390f35b608081565b604481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b68261008b565b9050919050565b6100c6816100ab565b82525050565b60006020820190506100e160008301846100bd565b92915050565b6000819050919050565b6100fa816100e7565b82525050565b600060208201905061011560008301846100f1565b9291505056fea164736f6c6343000813000a";

type PrecompilesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrecompilesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Precompiles__factory extends ContractFactory {
  constructor(...args: PrecompilesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Precompiles & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Precompiles__factory {
    return super.connect(runner) as Precompiles__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrecompilesInterface {
    return new Interface(_abi) as PrecompilesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Precompiles {
    return new Contract(address, _abi, runner) as unknown as Precompiles;
  }
}
